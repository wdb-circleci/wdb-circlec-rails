executors:
  default: # デフォルトのDockerイメージ
    docker:
      - image: circleci/ruby:2.5.1
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
    working_directory: ~/repo
  with_db: # MySQLのDockerイメージも同時に起動する
    docker:
      - image: circleci/ruby:2.5.1
        environment:
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
      - image: circleci/mysql:8.0
        # MySQL 8.0.4以降の認証プラグインを変更する
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: wdb-circleci-rails_test
    working_directory: ~/repo

version: 2.1
jobs:
  checkout_code: # ソースコードを取得
    executor: default
    steps:
      - checkout
      - save_cache: # ソースコードをキャッシュ。キーはリポジトリの最終コミットのハッシュ
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo

  bundle_dependencies:
    executor: default
    steps:
      - restore_cache: # ソースコードを復元
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache: # vender/bundleを復元
          key: v1-bundle-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache: # vendor/bundleをキャッシュ
          key: v1-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  test_rubocop:
    executor: default
    steps:
      - restore_cache: # ソースコードを復元
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache: # vender/bundleを復元
          key: v1-bundle-{{ checksum "Gemfile.lock" }}
      - run:
          name: RuboCopを実行
          command: |
            bundle exec rubocop \
            -r $(bundle show rubocop-junit-formatter)/lib/rubocop/formatter/junit_formatter.rb \
            --format RuboCop::Formatter::JUnitFormatter --out test_results/rubocop.xml
      - store_test_results: # テストレポートを保存
          path: test_results

  test_rails_best_practices:
    executor: default
    steps:
      - restore_cache: # ソースコードを復元
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache: # vender/bundleを復元
          key: v1-bundle-{{ checksum "Gemfile.lock" }}
      - run:
          name: rails_best_practicesを実行
          command: bundle exec rails_best_practices

  test_rspec:
    parallelism: 2
    executor: with_db
    steps:
      - restore_cache: # ソースコードを復元
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache: # vender/bundleを復元
          key: v1-bundle-{{ checksum "Gemfile.lock" }}
      - run:
          name: データベースの起動を待機
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: データベースのセットアップ
          command: bin/rails db:schema:load --trace
      - run:
          name: RSpecを実行
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results: # テストレポートを保存
          path: test_results

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - checkout_code
      - bundle_dependencies: # checkout_codeの後に実行
          requires:
            - checkout_code
      - test_rubocop: # bundle_dependenciesの後に実行
          requires:
            - bundle_dependencies
      - test_rails_best_practices: # bundle_dependenciesの後に実行
          requires:
            - bundle_dependencies
      - test_rspec: # bundle_dependenciesの後に実行
          requires:
            - bundle_dependencies
